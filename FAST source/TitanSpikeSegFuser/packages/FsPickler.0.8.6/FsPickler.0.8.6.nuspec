<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>FsPickler</id>
    <version>0.8.6</version>
    <title>FsPickler</title>
    <authors>Eirik Tsarpalis</authors>
    <owners>Eirik Tsarpalis</owners>
    <licenseUrl>https://github.com/eiriktsarpalis/FsPickler/blob/master/License.md</licenseUrl>
    <projectUrl>https://github.com/eiriktsarpalis/FsPickler/</projectUrl>
    <iconUrl>http://www.m-brace.net/media/pickler.jpg</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>* Based on the notion of pickler combinators.
* Provides an automated, strongly typed, pickler generation framework.
* Full support for .NET types, including classes and open hierarchies.
* Compatible with all serializable types, including the ISerializable interface.
* Highly optimized for F# core types.
* Performance about 5-20x faster than the default .NET serializers.
* Full support for the mono framework.

Provided "as is" with no express or implied warranty.

For more information, see https://github.com/eiriktsarpalis/FsPickler</description>
    <summary>A fast, general-purpose binary serializer for .NET written in F# that doubles as a pickler combinator library.</summary>
    <releaseNotes>This update introduces a breaking change: namespace has been updated to Nessos.FsPickler.
        
Improvements have been made to the pickler cache.</releaseNotes>
    <copyright>Eirik Tsarpalis</copyright>
    <language />
    <tags>F# serializer pickler combinators</tags>
  </metadata>
</package>